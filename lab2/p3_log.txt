   0x0000000000400ec5 <+57>:	callq  0x40163d <explode_bomb>
   0x0000000000400eca <+62>:	add    (%rbx),%r12d
   0x0000000000400ecd <+65>:	add    $0x4,%rbp
   0x0000000000400ed1 <+69>:	cmp    %r13,%rbp
   0x0000000000400ed4 <+72>:	jne    0x400eba <phase_2+46>
   0x0000000000400ed6 <+74>:	test   %r12d,%r12d
   0x0000000000400ed9 <+77>:	jne    0x400ee0 <phase_2+84>
   0x0000000000400edb <+79>:	callq  0x40163d <explode_bomb>
   0x0000000000400ee0 <+84>:	mov    0x28(%rsp),%rbx
   0x0000000000400ee5 <+89>:	mov    0x30(%rsp),%rbp
   0x0000000000400eea <+94>:	mov    0x38(%rsp),%r12
   0x0000000000400eef <+99>:	mov    0x40(%rsp),%r13
   0x0000000000400ef4 <+104>:	add    $0x48,%rsp
   0x0000000000400ef8 <+108>:	retq   
End of assembler dump.
(gdb) info r
rax            0x1	1
rbx            0x7fffffffe620	140737488348704
rcx            0x7fffffffe610	140737488348688
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x7fffffffe620	0x7fffffffe620
rsp            0x7fffffffe620	0x7fffffffe620
r8             0x1	1
r9             0x0	0
r10            0x1	1
r11            0x0	0
r12            0x0	0
r13            0x7fffffffe62c	140737488348716
r14            0x0	0
r15            0x0	0
rip            0x400ec3	0x400ec3 <phase_2+55>
eflags         0x246	[ PF ZF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) ni
0x0000000000400eca in phase_2 ()
(gdb) disas
Dump of assembler code for function phase_2:
   0x0000000000400e8c <+0>:	mov    %rbx,-0x20(%rsp)
   0x0000000000400e91 <+5>:	mov    %rbp,-0x18(%rsp)
   0x0000000000400e96 <+10>:	mov    %r12,-0x10(%rsp)
   0x0000000000400e9b <+15>:	mov    %r13,-0x8(%rsp)
   0x0000000000400ea0 <+20>:	sub    $0x48,%rsp
   0x0000000000400ea4 <+24>:	mov    %rsp,%rsi
   0x0000000000400ea7 <+27>:	callq  0x401743 <read_six_numbers>
   0x0000000000400eac <+32>:	mov    %rsp,%rbp
   0x0000000000400eaf <+35>:	lea    0xc(%rsp),%r13
   0x0000000000400eb4 <+40>:	mov    $0x0,%r12d
   0x0000000000400eba <+46>:	mov    %rbp,%rbx
   0x0000000000400ebd <+49>:	mov    0xc(%rbp),%eax
   0x0000000000400ec0 <+52>:	cmp    %eax,0x0(%rbp)
   0x0000000000400ec3 <+55>:	je     0x400eca <phase_2+62>
   0x0000000000400ec5 <+57>:	callq  0x40163d <explode_bomb>
=> 0x0000000000400eca <+62>:	add    (%rbx),%r12d
   0x0000000000400ecd <+65>:	add    $0x4,%rbp
   0x0000000000400ed1 <+69>:	cmp    %r13,%rbp
   0x0000000000400ed4 <+72>:	jne    0x400eba <phase_2+46>
   0x0000000000400ed6 <+74>:	test   %r12d,%r12d
   0x0000000000400ed9 <+77>:	jne    0x400ee0 <phase_2+84>
   0x0000000000400edb <+79>:	callq  0x40163d <explode_bomb>
   0x0000000000400ee0 <+84>:	mov    0x28(%rsp),%rbx
   0x0000000000400ee5 <+89>:	mov    0x30(%rsp),%rbp
   0x0000000000400eea <+94>:	mov    0x38(%rsp),%r12
   0x0000000000400eef <+99>:	mov    0x40(%rsp),%r13
   0x0000000000400ef4 <+104>:	add    $0x48,%rsp
   0x0000000000400ef8 <+108>:	retq   
End of assembler dump.
(gdb) info r
rax            0x1	1
rbx            0x7fffffffe620	140737488348704
rcx            0x7fffffffe610	140737488348688
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x7fffffffe620	0x7fffffffe620
rsp            0x7fffffffe620	0x7fffffffe620
r8             0x1	1
r9             0x0	0
r10            0x1	1
r11            0x0	0
r12            0x0	0
r13            0x7fffffffe62c	140737488348716
r14            0x0	0
r15            0x0	0
rip            0x400eca	0x400eca <phase_2+62>
eflags         0x246	[ PF ZF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe620:	0x00000001	0x00000001	0x00000001	0x00000001
0x7fffffffe630:	0x00000001	0x00000001	0x00602f90	0x00000000
0x7fffffffe640:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe650:	0x00000000	0x00000000	0x00400c40	0x00000000
0x7fffffffe660:	0xffffe750	0x00007fff	0x00400dd5	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
(gdb) x /24w $rsp
0x7fffffffe620:	0x00000001	0x00000001	0x00000001	0x00000001
0x7fffffffe630:	0x00000001	0x00000001	0x00602f90	0x00000000
0x7fffffffe640:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe650:	0x00000000	0x00000000	0x00400c40	0x00000000
0x7fffffffe660:	0xffffe750	0x00007fff	0x00400dd5	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
(gdb) x /24ws $rsp
0x7fffffffe620:	 U"\001\001\001\001\001\001\x602f90"
0x7fffffffe640:	 U""
0x7fffffffe644:	 U""
0x7fffffffe648:	 U"\xffffe758翿"
0x7fffffffe654:	 U""
0x7fffffffe658:	 U"\x400c40"
0x7fffffffe660:	 U"\xffffe750翿\x400dd5"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x850fce85\x3ae87d8a\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\x480fce85\xc5178275\xa8d5ce85\x3a89f24e"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
(gdb) ni
0x0000000000400ecd in phase_2 ()
(gdb) 
0x0000000000400ed1 in phase_2 ()
(gdb) 
0x0000000000400ed4 in phase_2 ()
(gdb) 
0x0000000000400eba in phase_2 ()
(gdb) 
0x0000000000400ebd in phase_2 ()
(gdb) 
0x0000000000400ec0 in phase_2 ()
(gdb) 
0x0000000000400ec3 in phase_2 ()
(gdb) 
0x0000000000400eca in phase_2 ()
(gdb) 
0x0000000000400ecd in phase_2 ()
(gdb) 
0x0000000000400ed1 in phase_2 ()
(gdb) 
0x0000000000400ed4 in phase_2 ()
(gdb) 
0x0000000000400eba in phase_2 ()
(gdb) 
0x0000000000400ebd in phase_2 ()
(gdb) 
0x0000000000400ec0 in phase_2 ()
(gdb) 
0x0000000000400ec3 in phase_2 ()
(gdb) 
0x0000000000400eca in phase_2 ()
(gdb) 
0x0000000000400ecd in phase_2 ()
(gdb) 
0x0000000000400ed1 in phase_2 ()
(gdb) 
0x0000000000400ed4 in phase_2 ()
(gdb) 
0x0000000000400ed6 in phase_2 ()
(gdb) disas
Dump of assembler code for function phase_2:
   0x0000000000400e8c <+0>:	mov    %rbx,-0x20(%rsp)
   0x0000000000400e91 <+5>:	mov    %rbp,-0x18(%rsp)
   0x0000000000400e96 <+10>:	mov    %r12,-0x10(%rsp)
   0x0000000000400e9b <+15>:	mov    %r13,-0x8(%rsp)
   0x0000000000400ea0 <+20>:	sub    $0x48,%rsp
   0x0000000000400ea4 <+24>:	mov    %rsp,%rsi
   0x0000000000400ea7 <+27>:	callq  0x401743 <read_six_numbers>
   0x0000000000400eac <+32>:	mov    %rsp,%rbp
   0x0000000000400eaf <+35>:	lea    0xc(%rsp),%r13
   0x0000000000400eb4 <+40>:	mov    $0x0,%r12d
   0x0000000000400eba <+46>:	mov    %rbp,%rbx
   0x0000000000400ebd <+49>:	mov    0xc(%rbp),%eax
   0x0000000000400ec0 <+52>:	cmp    %eax,0x0(%rbp)
   0x0000000000400ec3 <+55>:	je     0x400eca <phase_2+62>
   0x0000000000400ec5 <+57>:	callq  0x40163d <explode_bomb>
   0x0000000000400eca <+62>:	add    (%rbx),%r12d
   0x0000000000400ecd <+65>:	add    $0x4,%rbp
   0x0000000000400ed1 <+69>:	cmp    %r13,%rbp
   0x0000000000400ed4 <+72>:	jne    0x400eba <phase_2+46>
=> 0x0000000000400ed6 <+74>:	test   %r12d,%r12d
   0x0000000000400ed9 <+77>:	jne    0x400ee0 <phase_2+84>
   0x0000000000400edb <+79>:	callq  0x40163d <explode_bomb>
   0x0000000000400ee0 <+84>:	mov    0x28(%rsp),%rbx
   0x0000000000400ee5 <+89>:	mov    0x30(%rsp),%rbp
   0x0000000000400eea <+94>:	mov    0x38(%rsp),%r12
   0x0000000000400eef <+99>:	mov    0x40(%rsp),%r13
   0x0000000000400ef4 <+104>:	add    $0x48,%rsp
   0x0000000000400ef8 <+108>:	retq   
End of assembler dump.
(gdb) info r
rax            0x1	1
rbx            0x7fffffffe628	140737488348712
rcx            0x7fffffffe610	140737488348688
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x7fffffffe62c	0x7fffffffe62c
rsp            0x7fffffffe620	0x7fffffffe620
r8             0x1	1
r9             0x0	0
r10            0x1	1
r11            0x0	0
r12            0x3	3
r13            0x7fffffffe62c	140737488348716
r14            0x0	0
r15            0x0	0
rip            0x400ed6	0x400ed6 <phase_2+74>
eflags         0x246	[ PF ZF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24ws $rsp
0x7fffffffe620:	 U"\001\001\001\001\001\001\x602f90"
0x7fffffffe640:	 U""
0x7fffffffe644:	 U""
0x7fffffffe648:	 U"\xffffe758翿"
0x7fffffffe654:	 U""
0x7fffffffe658:	 U"\x400c40"
0x7fffffffe660:	 U"\xffffe750翿\x400dd5"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x850fce85\x3ae87d8a\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\x480fce85\xc5178275\xa8d5ce85\x3a89f24e"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
(gdb) x /24wx $rsp
0x7fffffffe620:	0x00000001	0x00000001	0x00000001	0x00000001
0x7fffffffe630:	0x00000001	0x00000001	0x00602f90	0x00000000
0x7fffffffe640:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe650:	0x00000000	0x00000000	0x00400c40	0x00000000
0x7fffffffe660:	0xffffe750	0x00007fff	0x00400dd5	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
(gdb) ni
0x0000000000400ed9 in phase_2 ()
(gdb) disas
Dump of assembler code for function phase_2:
   0x0000000000400e8c <+0>:	mov    %rbx,-0x20(%rsp)
   0x0000000000400e91 <+5>:	mov    %rbp,-0x18(%rsp)
   0x0000000000400e96 <+10>:	mov    %r12,-0x10(%rsp)
   0x0000000000400e9b <+15>:	mov    %r13,-0x8(%rsp)
   0x0000000000400ea0 <+20>:	sub    $0x48,%rsp
   0x0000000000400ea4 <+24>:	mov    %rsp,%rsi
   0x0000000000400ea7 <+27>:	callq  0x401743 <read_six_numbers>
   0x0000000000400eac <+32>:	mov    %rsp,%rbp
   0x0000000000400eaf <+35>:	lea    0xc(%rsp),%r13
   0x0000000000400eb4 <+40>:	mov    $0x0,%r12d
   0x0000000000400eba <+46>:	mov    %rbp,%rbx
   0x0000000000400ebd <+49>:	mov    0xc(%rbp),%eax
   0x0000000000400ec0 <+52>:	cmp    %eax,0x0(%rbp)
   0x0000000000400ec3 <+55>:	je     0x400eca <phase_2+62>
   0x0000000000400ec5 <+57>:	callq  0x40163d <explode_bomb>
   0x0000000000400eca <+62>:	add    (%rbx),%r12d
   0x0000000000400ecd <+65>:	add    $0x4,%rbp
   0x0000000000400ed1 <+69>:	cmp    %r13,%rbp
   0x0000000000400ed4 <+72>:	jne    0x400eba <phase_2+46>
   0x0000000000400ed6 <+74>:	test   %r12d,%r12d
=> 0x0000000000400ed9 <+77>:	jne    0x400ee0 <phase_2+84>
   0x0000000000400edb <+79>:	callq  0x40163d <explode_bomb>
   0x0000000000400ee0 <+84>:	mov    0x28(%rsp),%rbx
   0x0000000000400ee5 <+89>:	mov    0x30(%rsp),%rbp
   0x0000000000400eea <+94>:	mov    0x38(%rsp),%r12
   0x0000000000400eef <+99>:	mov    0x40(%rsp),%r13
   0x0000000000400ef4 <+104>:	add    $0x48,%rsp
   0x0000000000400ef8 <+108>:	retq   
End of assembler dump.
(gdb) info r
rax            0x1	1
rbx            0x7fffffffe628	140737488348712
rcx            0x7fffffffe610	140737488348688
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x7fffffffe62c	0x7fffffffe62c
rsp            0x7fffffffe620	0x7fffffffe620
r8             0x1	1
r9             0x0	0
r10            0x1	1
r11            0x0	0
r12            0x3	3
r13            0x7fffffffe62c	140737488348716
r14            0x0	0
r15            0x0	0
rip            0x400ed9	0x400ed9 <phase_2+77>
eflags         0x206	[ PF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe620:	0x00000001	0x00000001	0x00000001	0x00000001
0x7fffffffe630:	0x00000001	0x00000001	0x00602f90	0x00000000
0x7fffffffe640:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe650:	0x00000000	0x00000000	0x00400c40	0x00000000
0x7fffffffe660:	0xffffe750	0x00007fff	0x00400dd5	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
(gdb) x /24ws $rsp
0x7fffffffe620:	 U"\001\001\001\001\001\001\x602f90"
0x7fffffffe640:	 U""
0x7fffffffe644:	 U""
0x7fffffffe648:	 U"\xffffe758翿"
0x7fffffffe654:	 U""
0x7fffffffe658:	 U"\x400c40"
0x7fffffffe660:	 U"\xffffe750翿\x400dd5"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x850fce85\x3ae87d8a\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\x480fce85\xc5178275\xa8d5ce85\x3a89f24e"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
(gdb) x /s $rdx
0x30c81b0f98 <main_arena+2168>:	 ""
(gdb) x /s $rcx
0x7fffffffe610:	 "P\347\377\377\377\177"
(gdb) x /s $rbx
0x7fffffffe628:	 "\001"
(gdb) si
0x0000000000400ee0 in phase_2 ()
(gdb) disas
Dump of assembler code for function phase_2:
   0x0000000000400e8c <+0>:	mov    %rbx,-0x20(%rsp)
   0x0000000000400e91 <+5>:	mov    %rbp,-0x18(%rsp)
   0x0000000000400e96 <+10>:	mov    %r12,-0x10(%rsp)
   0x0000000000400e9b <+15>:	mov    %r13,-0x8(%rsp)
   0x0000000000400ea0 <+20>:	sub    $0x48,%rsp
   0x0000000000400ea4 <+24>:	mov    %rsp,%rsi
   0x0000000000400ea7 <+27>:	callq  0x401743 <read_six_numbers>
   0x0000000000400eac <+32>:	mov    %rsp,%rbp
   0x0000000000400eaf <+35>:	lea    0xc(%rsp),%r13
   0x0000000000400eb4 <+40>:	mov    $0x0,%r12d
   0x0000000000400eba <+46>:	mov    %rbp,%rbx
   0x0000000000400ebd <+49>:	mov    0xc(%rbp),%eax
   0x0000000000400ec0 <+52>:	cmp    %eax,0x0(%rbp)
   0x0000000000400ec3 <+55>:	je     0x400eca <phase_2+62>
   0x0000000000400ec5 <+57>:	callq  0x40163d <explode_bomb>
   0x0000000000400eca <+62>:	add    (%rbx),%r12d
   0x0000000000400ecd <+65>:	add    $0x4,%rbp
   0x0000000000400ed1 <+69>:	cmp    %r13,%rbp
   0x0000000000400ed4 <+72>:	jne    0x400eba <phase_2+46>
   0x0000000000400ed6 <+74>:	test   %r12d,%r12d
   0x0000000000400ed9 <+77>:	jne    0x400ee0 <phase_2+84>
   0x0000000000400edb <+79>:	callq  0x40163d <explode_bomb>
=> 0x0000000000400ee0 <+84>:	mov    0x28(%rsp),%rbx
   0x0000000000400ee5 <+89>:	mov    0x30(%rsp),%rbp
   0x0000000000400eea <+94>:	mov    0x38(%rsp),%r12
   0x0000000000400eef <+99>:	mov    0x40(%rsp),%r13
   0x0000000000400ef4 <+104>:	add    $0x48,%rsp
   0x0000000000400ef8 <+108>:	retq   
End of assembler dump.
(gdb) si
0x0000000000400ee5 in phase_2 ()
(gdb) 
0x0000000000400eea in phase_2 ()
(gdb) 
0x0000000000400eef in phase_2 ()
(gdb) 
0x0000000000400ef4 in phase_2 ()
(gdb) 
0x0000000000400ef8 in phase_2 ()
(gdb) 
main (argc=<optimized out>, argv=0x7fffffffe758) at bomb.c:83
83	    phase_defused();
(gdb) 
0x0000000000401785 in phase_defused ()
(gdb) disas
Dump of assembler code for function phase_defused:
=> 0x0000000000401785 <+0>:	sub    $0x68,%rsp
   0x0000000000401789 <+4>:	cmpl   $0x6,0x2014f0(%rip)        # 0x602c80 <num_input_strings>
   0x0000000000401790 <+11>:	jne    0x4017f0 <phase_defused+107>
   0x0000000000401792 <+13>:	lea    0x10(%rsp),%rcx
   0x0000000000401797 <+18>:	lea    0xc(%rsp),%rdx
   0x000000000040179c <+23>:	mov    $0x401ec4,%esi
   0x00000000004017a1 <+28>:	mov    $0x603030,%edi
   0x00000000004017a6 <+33>:	mov    $0x0,%eax
   0x00000000004017ab <+38>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x00000000004017b0 <+43>:	cmp    $0x2,%eax
   0x00000000004017b3 <+46>:	jne    0x4017e6 <phase_defused+97>
   0x00000000004017b5 <+48>:	mov    $0x401eca,%esi
   0x00000000004017ba <+53>:	lea    0x10(%rsp),%rdi
   0x00000000004017bf <+58>:	callq  0x40123d <strings_not_equal>
   0x00000000004017c4 <+63>:	test   %eax,%eax
   0x00000000004017c6 <+65>:	jne    0x4017e6 <phase_defused+97>
   0x00000000004017c8 <+67>:	mov    $0x401c40,%edi
   0x00000000004017cd <+72>:	callq  0x400aa0 <puts@plt>
   0x00000000004017d2 <+77>:	mov    $0x401c68,%edi
   0x00000000004017d7 <+82>:	callq  0x400aa0 <puts@plt>
   0x00000000004017dc <+87>:	mov    $0x0,%eax
   0x00000000004017e1 <+92>:	callq  0x40115a <secret_phase>
   0x00000000004017e6 <+97>:	mov    $0x401ca0,%edi
   0x00000000004017eb <+102>:	callq  0x400aa0 <puts@plt>
   0x00000000004017f0 <+107>:	add    $0x68,%rsp
   0x00000000004017f4 <+111>:	retq   
End of assembler dump.
(gdb) break phase_3
Breakpoint 7 at 0x400ef9
(gdb) c
Continuing.
That's number 2.  Keep going!

Breakpoint 7, 0x0000000000400ef9 in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
=> 0x0000000000400ef9 <+0>:	sub    $0x18,%rsp
   0x0000000000400efd <+4>:	lea    0x8(%rsp),%rcx
   0x0000000000400f02 <+9>:	lea    0xc(%rsp),%rdx
   0x0000000000400f07 <+14>:	mov    $0x401ebe,%esi
   0x0000000000400f0c <+19>:	mov    $0x0,%eax
   0x0000000000400f11 <+24>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x0000000000400f16 <+29>:	cmp    $0x1,%eax
   0x0000000000400f19 <+32>:	jg     0x400f20 <phase_3+39>
   0x0000000000400f1b <+34>:	callq  0x40163d <explode_bomb>
   0x0000000000400f20 <+39>:	cmpl   $0x7,0xc(%rsp)
   0x0000000000400f25 <+44>:	ja     0x400f63 <phase_3+106>
   0x0000000000400f27 <+46>:	mov    0xc(%rsp),%eax
   0x0000000000400f2b <+50>:	jmpq   *0x401b60(,%rax,8)
   0x0000000000400f32 <+57>:	mov    $0x217,%eax
   0x0000000000400f37 <+62>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f39 <+64>:	mov    $0xd6,%eax
   0x0000000000400f3e <+69>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f40 <+71>:	mov    $0x153,%eax
   0x0000000000400f45 <+76>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f47 <+78>:	mov    $0x77,%eax
   0x0000000000400f4c <+83>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f4e <+85>:	mov    $0x160,%eax
   0x0000000000400f53 <+90>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f55 <+92>:	mov    $0x397,%eax
   0x0000000000400f5a <+97>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f5c <+99>:	mov    $0x19c,%eax
   0x0000000000400f61 <+104>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f63 <+106>:	callq  0x40163d <explode_bomb>
   0x0000000000400f68 <+111>:	mov    $0x0,%eax
   0x0000000000400f6d <+116>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f6f <+118>:	mov    $0x39e,%eax
   0x0000000000400f74 <+123>:	cmp    0x8(%rsp),%eax
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f78 <+127>:	je     0x400f7f <phase_3+134>
   0x0000000000400f7a <+129>:	callq  0x40163d <explode_bomb>
   0x0000000000400f7f <+134>:	add    $0x18,%rsp
   0x0000000000400f83 <+138>:	retq   
End of assembler dump.
(gdb) info r
rax            0x602fe0	6303712
rbx            0x7fffffffe758	140737488349016
rcx            0x11	17
rdx            0x3	3
rsi            0x602fe0	6303712
rdi            0x602fe0	6303712
rbp            0x0	0x0
rsp            0x7fffffffe668	0x7fffffffe668
r8             0x7ffff7ffa04b	140737354113099
r9             0x0	0
r10            0x3d	61
r11            0x246	582
r12            0x400c40	4197440
r13            0x7fffffffe750	140737488349008
r14            0x0	0
r15            0x0	0
rip            0x400ef9	0x400ef9 <phase_3>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe668:	0x00400df1	0x00000000	0x00000000	0x00000000
0x7fffffffe678:	0xc7e21735	0x00000030	0x00000000	0x00000000
0x7fffffffe688:	0xffffe758	0x00007fff	0x00000000	0x00000002
0x7fffffffe698:	0x00400d24	0x00000000	0x00000000	0x00000000
0x7fffffffe6a8:	0x850fce85	0x3ae87d8a	0x00400c40	0x00000000
0x7fffffffe6b8:	0xffffe750	0x00007fff	0x00000000	0x00000000
(gdb) x /24ws $rsp
0x7fffffffe668:	 U"\x400df1"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x850fce85\x3ae87d8a\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\x480fce85\xc5178275\xa8d5ce85\x3a89f24e"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
0x7fffffffe6f0:	 U""
0x7fffffffe6f4:	 U""
0x7fffffffe6f8:	 U"\x401800"
0x7fffffffe700:	 U"\xffffe758翿\002"
0x7fffffffe710:	 U""
0x7fffffffe714:	 U""
(gdb) x /7xw 0x080488dc
0x80488dc:	Cannot access memory at address 0x80488dc
(gdb) x /s $rbx
0x7fffffffe758:	 "[\352\377\377\377\177"
(gdb) x /s $rcx
0x11:	 <Address 0x11 out of bounds>
(gdb) x /s $rdx
0x3:	 <Address 0x3 out of bounds>
(gdb) x /s $rsi
0x602fe0 <input_strings+160>:	 "%d %d %d %d %d %d"
(gdb) x /s $rdi
0x602fe0 <input_strings+160>:	 "%d %d %d %d %d %d"
(gdb) x /s $r8
0x7ffff7ffa04b:	 "nce isn't about why, it's about why not?\\n\n"
(gdb) x /s $r9
0x0:	 <Address 0x0 out of bounds>
(gdb) x /s 0x401ebe
0x401ebe:	 "%d %d"
(gdb) k
Kill the program being debugged? (y or n) y
(gdb) del br
Delete all breakpoints? (y or n) y
(gdb) break phase_3
Breakpoint 8 at 0x400ef9
(gdb) r defuser.txt
Starting program: /home/auser/course-materials/lab2/bomb defuser.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!

Breakpoint 8, 0x0000000000400ef9 in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
=> 0x0000000000400ef9 <+0>:	sub    $0x18,%rsp
   0x0000000000400efd <+4>:	lea    0x8(%rsp),%rcx
   0x0000000000400f02 <+9>:	lea    0xc(%rsp),%rdx
   0x0000000000400f07 <+14>:	mov    $0x401ebe,%esi
   0x0000000000400f0c <+19>:	mov    $0x0,%eax
   0x0000000000400f11 <+24>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x0000000000400f16 <+29>:	cmp    $0x1,%eax
   0x0000000000400f19 <+32>:	jg     0x400f20 <phase_3+39>
   0x0000000000400f1b <+34>:	callq  0x40163d <explode_bomb>
   0x0000000000400f20 <+39>:	cmpl   $0x7,0xc(%rsp)
   0x0000000000400f25 <+44>:	ja     0x400f63 <phase_3+106>
   0x0000000000400f27 <+46>:	mov    0xc(%rsp),%eax
   0x0000000000400f2b <+50>:	jmpq   *0x401b60(,%rax,8)
   0x0000000000400f32 <+57>:	mov    $0x217,%eax
   0x0000000000400f37 <+62>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f39 <+64>:	mov    $0xd6,%eax
   0x0000000000400f3e <+69>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f40 <+71>:	mov    $0x153,%eax
   0x0000000000400f45 <+76>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f47 <+78>:	mov    $0x77,%eax
   0x0000000000400f4c <+83>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f4e <+85>:	mov    $0x160,%eax
   0x0000000000400f53 <+90>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f55 <+92>:	mov    $0x397,%eax
   0x0000000000400f5a <+97>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f5c <+99>:	mov    $0x19c,%eax
   0x0000000000400f61 <+104>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f63 <+106>:	callq  0x40163d <explode_bomb>
   0x0000000000400f68 <+111>:	mov    $0x0,%eax
   0x0000000000400f6d <+116>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f6f <+118>:	mov    $0x39e,%eax
   0x0000000000400f74 <+123>:	cmp    0x8(%rsp),%eax
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f78 <+127>:	je     0x400f7f <phase_3+134>
   0x0000000000400f7a <+129>:	callq  0x40163d <explode_bomb>
   0x0000000000400f7f <+134>:	add    $0x18,%rsp
   0x0000000000400f83 <+138>:	retq   
End of assembler dump.
(gdb) info r
rax            0x602fe0	6303712
rbx            0x7fffffffe758	140737488349016
rcx            0x3	3
rdx            0x3	3
rsi            0x602fe0	6303712
rdi            0x602fe0	6303712
rbp            0x0	0x0
rsp            0x7fffffffe668	0x7fffffffe668
r8             0x7ffff7ffa03d	140737354113085
r9             0x0	0
r10            0x2f	47
r11            0x246	582
r12            0x400c40	4197440
r13            0x7fffffffe750	140737488349008
r14            0x0	0
r15            0x0	0
rip            0x400ef9	0x400ef9 <phase_3>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe668:	0x00400df1	0x00000000	0x00000000	0x00000000
0x7fffffffe678:	0xc7e21735	0x00000030	0x00000000	0x00000000
0x7fffffffe688:	0xffffe758	0x00007fff	0x00000000	0x00000002
0x7fffffffe698:	0x00400d24	0x00000000	0x00000000	0x00000000
0x7fffffffe6a8:	0x7e21ba8c	0x34b27484	0x00400c40	0x00000000
0x7fffffffe6b8:	0xffffe750	0x00007fff	0x00000000	0x00000000
(gdb) x /24ws $rsp
0x7fffffffe668:	 U"\x400df1"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x7e21ba8c\x34b27484\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\xb321ba8c\xcb4d8b7b\x53fbba8c\x34d3fb40"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
0x7fffffffe6f0:	 U""
0x7fffffffe6f4:	 U""
0x7fffffffe6f8:	 U"\x401800"
0x7fffffffe700:	 U"\xffffe758翿\002"
0x7fffffffe710:	 U""
0x7fffffffe714:	 U""
(gdb) x /s r8
No symbol "r8" in current context.
(gdb) x /s $r8
0x7ffff7ffa03d:	 "nce isn't about why, it's about why not?\\n\n"
(gdb) x /s $rsp
0x7fffffffe668:	 "\361\r@"
(gdb) x /s $rsi
0x602fe0 <input_strings+160>:	 "1 2"
(gdb) x /s $rdi
0x602fe0 <input_strings+160>:	 "1 2"
(gdb) x /s $rbx
0x7fffffffe758:	 "[\352\377\377\377\177"
(gdb) x /s 0x401ebe
0x401ebe:	 "%d %d"
(gdb) x /s 0x401b60
0x401b60 <__dso_handle+600>:	 "2\017@"
(gdb) x /8wx 0x401b60
0x401b60 <__dso_handle+600>:	0x00400f32	0x00000000	0x00400f6f	0x00000000
0x401b70 <__dso_handle+616>:	0x00400f39	0x00000000	0x00400f40	0x00000000
(gdb) x /7xw 0x401b60
0x401b60 <__dso_handle+600>:	0x00400f32	0x00000000	0x00400f6f	0x00000000
0x401b70 <__dso_handle+616>:	0x00400f39	0x00000000	0x00400f40
(gdb) x /24wx 0x401b60
0x401b60 <__dso_handle+600>:	0x00400f32	0x00000000	0x00400f6f	0x00000000
0x401b70 <__dso_handle+616>:	0x00400f39	0x00000000	0x00400f40	0x00000000
0x401b80 <__dso_handle+632>:	0x00400f47	0x00000000	0x00400f4e	0x00000000
0x401b90 <__dso_handle+648>:	0x00400f55	0x00000000	0x00400f5c	0x00000000
0x401ba0 <array.3014>:	0x0000000a	0x00000002	0x0000000e	0x00000007
0x401bb0 <array.3014+16>:	0x00000008	0x0000000c	0x0000000f	0x0000000b
(gdb) si
0x0000000000400efd in phase_3 ()
(gdb) 
0x0000000000400f02 in phase_3 ()
(gdb) 
0x0000000000400f07 in phase_3 ()
(gdb) 
0x0000000000400f0c in phase_3 ()
(gdb) 
0x0000000000400f11 in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
   0x0000000000400ef9 <+0>:	sub    $0x18,%rsp
   0x0000000000400efd <+4>:	lea    0x8(%rsp),%rcx
   0x0000000000400f02 <+9>:	lea    0xc(%rsp),%rdx
   0x0000000000400f07 <+14>:	mov    $0x401ebe,%esi
   0x0000000000400f0c <+19>:	mov    $0x0,%eax
=> 0x0000000000400f11 <+24>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x0000000000400f16 <+29>:	cmp    $0x1,%eax
   0x0000000000400f19 <+32>:	jg     0x400f20 <phase_3+39>
   0x0000000000400f1b <+34>:	callq  0x40163d <explode_bomb>
   0x0000000000400f20 <+39>:	cmpl   $0x7,0xc(%rsp)
   0x0000000000400f25 <+44>:	ja     0x400f63 <phase_3+106>
   0x0000000000400f27 <+46>:	mov    0xc(%rsp),%eax
   0x0000000000400f2b <+50>:	jmpq   *0x401b60(,%rax,8)
   0x0000000000400f32 <+57>:	mov    $0x217,%eax
   0x0000000000400f37 <+62>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f39 <+64>:	mov    $0xd6,%eax
   0x0000000000400f3e <+69>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f40 <+71>:	mov    $0x153,%eax
   0x0000000000400f45 <+76>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f47 <+78>:	mov    $0x77,%eax
   0x0000000000400f4c <+83>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f4e <+85>:	mov    $0x160,%eax
   0x0000000000400f53 <+90>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f55 <+92>:	mov    $0x397,%eax
   0x0000000000400f5a <+97>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f5c <+99>:	mov    $0x19c,%eax
   0x0000000000400f61 <+104>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f63 <+106>:	callq  0x40163d <explode_bomb>
   0x0000000000400f68 <+111>:	mov    $0x0,%eax
   0x0000000000400f6d <+116>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f6f <+118>:	mov    $0x39e,%eax
   0x0000000000400f74 <+123>:	cmp    0x8(%rsp),%eax
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f78 <+127>:	je     0x400f7f <phase_3+134>
   0x0000000000400f7a <+129>:	callq  0x40163d <explode_bomb>
   0x0000000000400f7f <+134>:	add    $0x18,%rsp
   0x0000000000400f83 <+138>:	retq   
End of assembler dump.
(gdb) info r
rax            0x0	0
rbx            0x7fffffffe758	140737488349016
rcx            0x7fffffffe658	140737488348760
rdx            0x7fffffffe65c	140737488348764
rsi            0x401ebe	4202174
rdi            0x602fe0	6303712
rbp            0x0	0x0
rsp            0x7fffffffe650	0x7fffffffe650
r8             0x7ffff7ffa03d	140737354113085
r9             0x0	0
r10            0x2f	47
r11            0x246	582
r12            0x400c40	4197440
r13            0x7fffffffe750	140737488349008
r14            0x0	0
r15            0x0	0
rip            0x400f11	0x400f11 <phase_3+24>
eflags         0x206	[ PF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb)  x /24wx $rsp
0x7fffffffe650:	0xffffe758	0x00007fff	0x0040166d	0x00000000
0x7fffffffe660:	0x00400c40	0x00000000	0x00400df1	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
0x7fffffffe680:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe690:	0x00000000	0x00000002	0x00400d24	0x00000000
0x7fffffffe6a0:	0x00000000	0x00000000	0x7e21ba8c	0x34b27484
(gdb)  x /24ws $rsp
0x7fffffffe650:	 U"\xffffe758翿\x40166d"
0x7fffffffe660:	 U"\x400c40"
0x7fffffffe668:	 U"\x400df1"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x7e21ba8c\x34b27484\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\xb321ba8c\xcb4d8b7b\x53fbba8c\x34d3fb40"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
0x7fffffffe6f0:	 U""
0x7fffffffe6f4:	 U""
0x7fffffffe6f8:	 U"\x401800"
0x7fffffffe700:	 U"\xffffe758翿\002"
(gdb) x /s $rsi
0x401ebe:	 "%d %d"
(gdb) x /s $rdi
0x602fe0 <input_strings+160>:	 "1 2"
(gdb) ni
0x0000000000400f16 in phase_3 ()
(gdb) 
0x0000000000400f19 in phase_3 ()
(gdb) 
0x0000000000400f20 in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
   0x0000000000400ef9 <+0>:	sub    $0x18,%rsp
   0x0000000000400efd <+4>:	lea    0x8(%rsp),%rcx
   0x0000000000400f02 <+9>:	lea    0xc(%rsp),%rdx
   0x0000000000400f07 <+14>:	mov    $0x401ebe,%esi
   0x0000000000400f0c <+19>:	mov    $0x0,%eax
   0x0000000000400f11 <+24>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x0000000000400f16 <+29>:	cmp    $0x1,%eax
   0x0000000000400f19 <+32>:	jg     0x400f20 <phase_3+39>
   0x0000000000400f1b <+34>:	callq  0x40163d <explode_bomb>
=> 0x0000000000400f20 <+39>:	cmpl   $0x7,0xc(%rsp)
   0x0000000000400f25 <+44>:	ja     0x400f63 <phase_3+106>
   0x0000000000400f27 <+46>:	mov    0xc(%rsp),%eax
   0x0000000000400f2b <+50>:	jmpq   *0x401b60(,%rax,8)
   0x0000000000400f32 <+57>:	mov    $0x217,%eax
   0x0000000000400f37 <+62>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f39 <+64>:	mov    $0xd6,%eax
   0x0000000000400f3e <+69>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f40 <+71>:	mov    $0x153,%eax
   0x0000000000400f45 <+76>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f47 <+78>:	mov    $0x77,%eax
   0x0000000000400f4c <+83>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f4e <+85>:	mov    $0x160,%eax
   0x0000000000400f53 <+90>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f55 <+92>:	mov    $0x397,%eax
   0x0000000000400f5a <+97>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f5c <+99>:	mov    $0x19c,%eax
   0x0000000000400f61 <+104>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f63 <+106>:	callq  0x40163d <explode_bomb>
   0x0000000000400f68 <+111>:	mov    $0x0,%eax
   0x0000000000400f6d <+116>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f6f <+118>:	mov    $0x39e,%eax
   0x0000000000400f74 <+123>:	cmp    0x8(%rsp),%eax
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f78 <+127>:	je     0x400f7f <phase_3+134>
   0x0000000000400f7a <+129>:	callq  0x40163d <explode_bomb>
   0x0000000000400f7f <+134>:	add    $0x18,%rsp
   0x0000000000400f83 <+138>:	retq   
End of assembler dump.
(gdb) info r
rax            0x2	2
rbx            0x7fffffffe758	140737488349016
rcx            0x20	32
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x0	0x0
rsp            0x7fffffffe650	0x7fffffffe650
r8             0x1	1
r9             0x0	0
r10            0x2	2
r11            0x0	0
r12            0x400c40	4197440
r13            0x7fffffffe750	140737488349008
r14            0x0	0
r15            0x0	0
rip            0x400f20	0x400f20 <phase_3+39>
eflags         0x202	[ IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe650:	0xffffe758	0x00007fff	0x00000002	0x00000001
0x7fffffffe660:	0x00400c40	0x00000000	0x00400df1	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
0x7fffffffe680:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe690:	0x00000000	0x00000002	0x00400d24	0x00000000
0x7fffffffe6a0:	0x00000000	0x00000000	0x7e21ba8c	0x34b27484
(gdb) x /24ws $rsp
0x7fffffffe650:	 U"\xffffe758翿\002\001\x400c40"
0x7fffffffe668:	 U"\x400df1"
0x7fffffffe670:	 U""
0x7fffffffe674:	 U""
0x7fffffffe678:	 U"\xc7e21735\060"
0x7fffffffe684:	 U""
0x7fffffffe688:	 U"\xffffe758翿"
0x7fffffffe694:	 U"\002\x400d24"
0x7fffffffe6a0:	 U""
0x7fffffffe6a4:	 U""
0x7fffffffe6a8:	 U"\x7e21ba8c\x34b27484\x400c40"
0x7fffffffe6b8:	 U"\xffffe750翿"
0x7fffffffe6c4:	 U""
0x7fffffffe6c8:	 U""
0x7fffffffe6cc:	 U""
0x7fffffffe6d0:	 U"\xb321ba8c\xcb4d8b7b\x53fbba8c\x34d3fb40"
0x7fffffffe6e4:	 U""
0x7fffffffe6e8:	 U""
0x7fffffffe6ec:	 U""
0x7fffffffe6f0:	 U""
0x7fffffffe6f4:	 U""
0x7fffffffe6f8:	 U"\x401800"
0x7fffffffe700:	 U"\xffffe758翿\002"
0x7fffffffe710:	 U""
(gdb) ni
0x0000000000400f25 in phase_3 ()
(gdb) 
0x0000000000400f27 in phase_3 ()
(gdb) disas
Dump of assembler code for function phase_3:
   0x0000000000400ef9 <+0>:	sub    $0x18,%rsp
   0x0000000000400efd <+4>:	lea    0x8(%rsp),%rcx
   0x0000000000400f02 <+9>:	lea    0xc(%rsp),%rdx
   0x0000000000400f07 <+14>:	mov    $0x401ebe,%esi
   0x0000000000400f0c <+19>:	mov    $0x0,%eax
   0x0000000000400f11 <+24>:	callq  0x400ab0 <__isoc99_sscanf@plt>
   0x0000000000400f16 <+29>:	cmp    $0x1,%eax
   0x0000000000400f19 <+32>:	jg     0x400f20 <phase_3+39>
   0x0000000000400f1b <+34>:	callq  0x40163d <explode_bomb>
   0x0000000000400f20 <+39>:	cmpl   $0x7,0xc(%rsp)
   0x0000000000400f25 <+44>:	ja     0x400f63 <phase_3+106>
=> 0x0000000000400f27 <+46>:	mov    0xc(%rsp),%eax
   0x0000000000400f2b <+50>:	jmpq   *0x401b60(,%rax,8)
   0x0000000000400f32 <+57>:	mov    $0x217,%eax
   0x0000000000400f37 <+62>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f39 <+64>:	mov    $0xd6,%eax
   0x0000000000400f3e <+69>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f40 <+71>:	mov    $0x153,%eax
   0x0000000000400f45 <+76>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f47 <+78>:	mov    $0x77,%eax
   0x0000000000400f4c <+83>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f4e <+85>:	mov    $0x160,%eax
   0x0000000000400f53 <+90>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f55 <+92>:	mov    $0x397,%eax
   0x0000000000400f5a <+97>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f5c <+99>:	mov    $0x19c,%eax
   0x0000000000400f61 <+104>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f63 <+106>:	callq  0x40163d <explode_bomb>
   0x0000000000400f68 <+111>:	mov    $0x0,%eax
   0x0000000000400f6d <+116>:	jmp    0x400f74 <phase_3+123>
   0x0000000000400f6f <+118>:	mov    $0x39e,%eax
   0x0000000000400f74 <+123>:	cmp    0x8(%rsp),%eax
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f78 <+127>:	je     0x400f7f <phase_3+134>
   0x0000000000400f7a <+129>:	callq  0x40163d <explode_bomb>
   0x0000000000400f7f <+134>:	add    $0x18,%rsp
   0x0000000000400f83 <+138>:	retq   
End of assembler dump.
(gdb) info r
rax            0x2	2
rbx            0x7fffffffe758	140737488349016
rcx            0x20	32
rdx            0x30c81b0f98	209515646872
rsi            0x0	0
rdi            0xd9f	3487
rbp            0x0	0x0
rsp            0x7fffffffe650	0x7fffffffe650
r8             0x1	1
r9             0x0	0
r10            0x2	2
r11            0x0	0
r12            0x400c40	4197440
r13            0x7fffffffe750	140737488349008
r14            0x0	0
r15            0x0	0
rip            0x400f27	0x400f27 <phase_3+46>
eflags         0x297	[ CF PF AF SF IF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) x /24wx $rsp
0x7fffffffe650:	0xffffe758	0x00007fff	0x00000002	0x00000001
0x7fffffffe660:	0x00400c40	0x00000000	0x00400df1	0x00000000
0x7fffffffe670:	0x00000000	0x00000000	0xc7e21735	0x00000030
0x7fffffffe680:	0x00000000	0x00000000	0xffffe758	0x00007fff
0x7fffffffe690:	0x00000000	0x00000002	0x00400d24	0x00000000
0x7fffffffe6a0:	0x00000000	0x00000000	0x7e21ba8c	0x34b27484
(gdb) 

